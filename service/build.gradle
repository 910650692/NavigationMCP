plugins {
    alias(libs.plugins.android.library)
}
apply plugin: 'org.greenrobot.greendao'

String flavorType = "type"

android {
    namespace 'com.sgm.navi.service'
    compileSdk Integer.parseInt(libs.versions.compileSdk.get())
    buildToolsVersion libs.versions.buildSdk.get()

    aaptOptions {
        noCompress 'cmb'
    }

    defaultConfig {
        minSdk IS_PAD_RUN.toBoolean() ? Integer.parseInt(libs.versions.padminSdk.get()) :Integer.parseInt(libs.versions.minSdk.get())
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField("String", "MAP_SDK", "$MAP_SDK")
        buildConfigField("boolean", "SDK_ACTIVATE", "$SDK_ACTIVATE")
        ndk {
            //noinspection ChromeOsAbiSupport
            abiFilters 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        buildConfig = true
    }

    //greendao配置
    greendao {
        schemaVersion 17 // 数据库 schema 的版本号，用于数据库升级
//        daoPackage 'com.sgm.navi.service.greendao' // 生成 DAO 类的包名
//        targetGenDir 'src/main/java' // 生成文件的目录（通常建议放在 build/generated/source/greendao 下，以避免与源代码混淆）
    }

    flavorDimensions flavorType

    productFlavors {
        defaule {
            dimension flavorType
        }
        buick {
            dimension flavorType
        }
        cadi {
            dimension flavorType
        }
        clea_8255 {
            dimension flavorType
        }
        clea_local_8155 {
            dimension flavorType
        }
        clea_8775 {
            dimension flavorType
        }
    }


    sourceSets {
        main {
            jniLibs.srcDirs = ['libs', '/jni']
            res.srcDirs = [
                    'src/main/res',
                    'src/main/res_layer',
            ]
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation libs.bundles.module.library
    implementation libs.work.runtime
    implementation libs.greendao
    implementation libs.lombok
    annotationProcessor libs.lombok
    implementation libs.adapter.rxjava
    implementation libs.converter.gson
    implementation libs.converter.scalars
    implementation libs.logging.interceptor
    implementation libs.rxandroid
    implementation libs.androidcar

    defauleCompileOnly libs.gm.gb.framework
    buickCompileOnly libs.gm.gb.framework
    cadiCompileOnly libs.gm.gb.framework
    clea_8255CompileOnly libs.gm.clea.framework
    clea_8775CompileOnly libs.gm.clea.framework
    clea_local_8155CompileOnly libs.bosch.framework

    defauleCompileOnly libs.gm.gb.info3
    buickCompileOnly libs.gm.gb.info3
    cadiCompileOnly libs.gm.gb.info3
    clea_8255CompileOnly libs.gm.clea.info3
    clea_8775CompileOnly libs.gm.clea.info3
    clea_local_8155CompileOnly libs.bosch.info3

    defauleImplementation libs.gb.privacy
    buickImplementation libs.gb.privacy
    clea_local_8155Implementation(libs.ndnc.privacy) {
        exclude group: "com.patac.hmi.library", module: "net_basic_vcupro"
    }
    clea_8255Implementation libs.ndnc.privacy
    cadiImplementation libs.cadi.privacy
    clea_8775Implementation libs.ndnc.privacy

    implementation project(":utils")
    implementation project(":patacnetlib")
    implementation project(":burypoint")

    if (SDK_ACTIVATE.toBoolean() == true) {
        implementation project(":engine:bls:activate")
        println("打包激活版本的 MAP SDK")
    } else {
        implementation project(":engine:bls:default")
        println("打包免激活版本的 MAP SDK")
    }
}