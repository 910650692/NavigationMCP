plugins {
    alias(libs.plugins.android.library)
}
String flavorType = "type"

android {
    namespace 'com.sgm.navi.scene'
    compileSdk Integer.parseInt(libs.versions.compileSdk.get())
    buildToolsVersion libs.versions.buildSdk.get()

    defaultConfig {
        minSdk IS_PAD_RUN.toBoolean() ? Integer.parseInt(libs.versions.padminSdk.get()) :Integer.parseInt(libs.versions.minSdk.get())
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        // 添加 javaCompileOptions 和 annotationProcessorOptions
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        dataBinding = true
        viewBinding true
    }

    flavorDimensions flavorType

    productFlavors {
        defaule {
            dimension flavorType
        }
        buick {
            dimension flavorType
        }
        cadi {
            dimension flavorType
        }
        clea_8255 {
            dimension flavorType
        }
        clea_local_8155 {
            dimension flavorType
        }
        clea_8775 {
            dimension flavorType
        }
    }

    sourceSets {
        clea_8775{
            res.srcDirs = ['src/main/res/sw1225dp']
        }
        clea_local_8155{
            res.srcDirs = ['src/main/res/sw1225dp']
        }
    }
}

dependencies {
    implementation libs.appcompat
    implementation libs.material
    implementation project(":ui")
    implementation project(":service")
    implementation project(":utils")
    implementation project(":burypoint")
    implementation libs.arouter.api
    implementation libs.projectlombok.lombok
    annotationProcessor libs.arouter.compiler
}