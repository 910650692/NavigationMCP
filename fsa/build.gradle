plugins {
    alias(libs.plugins.android.library)
}

android {
    namespace 'com.fy.navi.fsa'
    compileSdk Integer.parseInt(libs.versions.compileSdk.get())
    buildToolsVersion libs.versions.buildSdk.get()

    defaultConfig {
        minSdk IS_PAD_RUN.toBoolean() ? Integer.parseInt(libs.versions.padminSdk.get()) :Integer.parseInt(libs.versions.minSdk.get())
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    if (IS_PAD_RUN.toBoolean()){
        sourceSets {
            main {
                java {
                    exclude 'com/fy/navi/adas/AdasClient.java'
                    exclude 'com/fy/navi/adas/L2PPManager.java'
                    exclude 'com/fy/navi/adas/SuperCruiseManager.java'
                }
            }
        }
    } else {
        sourceSets {
            main {
                debug{
                    java{
                        exclude 'com/fy/navi/adas/AdasClient.java'
                        exclude 'com/fy/navi/adas/L2PPManager.java'
                        exclude 'com/fy/navi/adas/SuperCruiseManager.java'
                    }
                }
            }
        }
    }
}

dependencies {
    implementation libs.appcompat
    implementation libs.protobuf
    implementation libs.vehicleapi
    implementation libs.protobean
    implementation project(":engine:fsa")
    if (IS_PAD_RUN.toBoolean()){
        releaseImplementation project(":engine:adas")
    }else {
        implementation project(":engine:adas")
    }
    implementation project(":service")
    implementation project(":utils")
    implementation project(":engine:vtserver")
}